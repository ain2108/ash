void loop();
char * get_big_line(FILE * fp); 
int get_argc(char * line, char delim);
void get_argv(char * line, char ** argv);
void print_argv(char ** argv, int argc);
void execute(char ** argv);
void die(char * error_message);
int interpret(char ** argv, int argc);
void die_errno();
void reset_history();
int add_to_history(char * cmd);
void print_history();
char * cmd_from_history(int offset);
int execute_line(char * line);
void free_history();
int count_pipes(char ** argv, int argc);
void get_pipe_positions(char ** argv, int argc, int * positions);
void df(char *);
int close_pipes();
int open_pipes();
int recycle_pipes();
char * argv_to_line(char ** argv, int argc);
int get_argv_length(char ** argv, int argc);
void free_argv(char ** argv, int argc);
int handle_error(int error);
int cmd_is_builtin(char * cmd);
int pipeline_with_builtin(char ** argv, int argc);
char * format_cmd(char * cmd);
int exist_consecutive_pipes(int * position, int number_of_pipes);